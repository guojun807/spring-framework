<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<bean id="myTestBean" class="store.guojun.beans.MyTestBean">
		<meta key="hello" value="world"/>
	</bean>
	<bean id="getUserBeanTest" class="store.guojun.beans.lookup.GetUserBeanTest">
		<!-- 每一个lookup创建一个实例LookupOverride，该实例重写了hashcode,相同的name只会储存最后一个，所以下面
		的lookup最后调用的是teacher
		存放在Set<MethodOverride>集合中，该集合是GenericBeanDefinition的一个属性 -->
		<lookup-method name="getBean" bean="student"></lookup-method>
		<lookup-method name="getBean" bean="teacher"></lookup-method>
		<!--
		  每一个meta 创建一个实例 BeanMetadataAttribute(key为name,value=value)，
		  把每个实例放入 GenericBeanDefinition 的 Map(String, Object) attributes 属性中
		-->
		<meta key="aaa" value="bbb"/>
		<meta key="hello" value="world"/>
	</bean>
	<bean id="teacher" class="store.guojun.beans.lookup.Teacher"></bean>
	<bean id="student" class="store.guojun.beans.lookup.Student"></bean>

	<bean id="helloBean" class="store.guojun.beans.constructor.HelloBean">
		<constructor-arg index="1">
			<value>北京</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>zhangsan</value>
		</constructor-arg>
		<constructor-arg index="0">
			<value>张三</value>
		</constructor-arg>
	</bean>
	<!-- 通过构造器注入 -->
	<!--<bean id="testA" class="store.guojun.beans.depends.TestA">-->
		<!--<constructor-arg index="0" ref="testB"></constructor-arg>-->
	<!--</bean>-->
	<!--<bean id="testB" class="store.guojun.beans.depends.TestB">-->
		<!--<constructor-arg index="0" ref="testC"></constructor-arg>-->
	<!--</bean>-->
	<!--<bean id="testC" class="store.guojun.beans.depends.TestC">-->
		<!--<constructor-arg index="0" ref="testA"></constructor-arg>-->
	<!--</bean>-->
	<!-- 通过set注入 -->
	<!--<bean id="testA" class="store.guojun.beans.depends.TestA">-->
		<!--<constructor-arg index="0" ref="testB"></constructor-arg>-->
	<!--</bean>-->
	<!--<bean id="testB" class="store.guojun.beans.depends.TestB">-->
		<!--<constructor-arg index="0" ref="testC"></constructor-arg>-->
	<!--</bean>-->
	<!--<bean id="testC" class="store.guojun.beans.depends.TestC">-->
		<!--<constructor-arg index="0" ref="testA"></constructor-arg>-->
	<!--</bean>-->
	<!-- 通过prototype注入 -->
	<bean id="testA" class="store.guojun.beans.depends.TestA">
		<property name="testB" ref="testB"></property>
	</bean>
	<bean id="testB" class="store.guojun.beans.depends.TestB">
		<property name="testC" ref="testC"></property>
	</bean>
	<bean id="testC" class="store.guojun.beans.depends.TestC">
		<property name="testA" ref="testA"></property>
	</bean>
</beans>
